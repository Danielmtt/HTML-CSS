{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/cards-pokemon/cards-pokemon.component.ts","./src/app/components/cards-pokemon/cards-pokemon.component.html","./src/app/services/pokemon-api-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardsPokemonComponent } from './components/cards-pokemon/cards-pokemon.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: CardsPokemonComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pokedex';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CardsPokemonComponent } from './components/cards-pokemon/cards-pokemon.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardsPokemonComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { PokemonModel } from 'src/app/pokemon-model';\nimport { PokemonApiServiceService } from 'src/app/services/pokemon-api-service.service';\n\n\n@Component({\n  selector: 'app-cards-pokemon',\n  templateUrl: './cards-pokemon.component.html',\n  styleUrls: ['./cards-pokemon.component.css']\n})\n\nexport class CardsPokemonComponent implements OnInit {\n\n  listaPokemons: PokemonModel[];\n  pokemonSelected : PokemonModel;\n  listaFiltrada : PokemonModel[];\n\n  constructor(private PokemonApi: PokemonApiServiceService) { }\n\n  ngOnInit(): void {\n    this.PokemonApi.List().subscribe((lista) => {\n      this.listaPokemons = lista\n      this.listaFiltrada = this.listaPokemons\n    })\n\n  }\n\n  filtra(tipo : string): void {\n    this.listaFiltrada = this.listaPokemons.filter(function (obj) { return obj.type[0] == tipo || obj.type[1] == tipo || obj.type[2] == tipo ; });\n  }\n\n  onSelect(pokemon: PokemonModel): void {\n    this.pokemonSelected = pokemon\n  }\n\n}\n","<body>\n  <img id=\"logoPrincipal\" src=\"../../../assets/pokemon-logo.png\" alt=\"\">\n  <div id=\"filtro\">\n    <mat-accordion >\n      <mat-expansion-panel >\n        <mat-expansion-panel-header>\n          <mat-panel-title>Filtro</mat-panel-title>\n        </mat-expansion-panel-header>\n        <mat-chip-list>\n          <mat-chip (click)=\"filtra('Water')\">Water</mat-chip>\n          <mat-chip (click)=\"filtra('Fire')\">Fire</mat-chip>\n          <mat-chip (click)=\"filtra('Grass')\">Grass</mat-chip>\n          <mat-chip (click)=\"filtra('Bug')\">Bug</mat-chip>\n          <mat-chip (click)=\"filtra('Normal')\">Normal</mat-chip>\n          <mat-chip (click)=\"filtra('Poison')\">Poison</mat-chip>\n          <mat-chip (click)=\"filtra('Flying')\">Flying</mat-chip>\n          <mat-chip (click)=\"filtra('Dragon')\">Dragon</mat-chip>\n          <mat-chip (click)=\"filtra('Electric')\">Electric</mat-chip>\n          <mat-chip (click)=\"filtra('Ground')\">Ground</mat-chip>\n          <mat-chip (click)=\"filtra('Fighting')\">Fighting</mat-chip>\n          <mat-chip (click)=\"filtra('Psychic')\">Psychic</mat-chip>\n          <mat-chip (click)=\"filtra('Rock')\">Rock</mat-chip>\n          <mat-chip (click)=\"filtra('Ice')\">Ice</mat-chip>\n          <mat-chip (click)=\"filtra('Ghost')\">Ghost</mat-chip>\n        </mat-chip-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n  <main>\n    <div (click)=\"onSelect(pokemon)\" *ngFor=\"let pokemon of listaFiltrada\" id=\"card\"\n          [class.planta]=\"pokemon.type[0] === 'Grass'\"  [class.water]=\"pokemon.type[0] === 'Water'\"\n          [class.fire]=\"pokemon.type[0] === 'Fire'\"     [class.dragon]=\"pokemon.type[0] === 'Dragon'\"\n          [class.normal]=\"pokemon.type[0] === 'Normal'\" [class.bug]=\"pokemon.type[0] === 'Bug'\"\n          [class.poison]=\"pokemon.type[0] === 'Poison'\" [class.electric]=\"pokemon.type[0] === 'Electric'\"\n          [class.ground]=\"pokemon.type[0] === 'Ground'\" [class.ghost]=\"pokemon.type[0] === 'Ghost'\"\n          [class.fight]=\"pokemon.type[0] === 'Fighting'\"[class.psychic]=\"pokemon.type[0] === 'Psychic'\"\n          [class.rock]=\"pokemon.type[0] === 'Rock'\"     [class.ice]=\"pokemon.type[0] === 'Ice'\"\n          [class.flying]=\"pokemon.type[0] === 'Flying'\">\n\n        <h1>{{pokemon.name}}</h1>\n\n        <div id=\"numeroPokemon\">\n          <p>N°{{pokemon.num}}</p>\n        </div>\n\n        <div id=\"background-img\">\n          <img src=\"https://pokeres.bastionbot.org/images/pokemon/{{pokemon.id}}.png\" alt=\"descrição\">\n\n          <div id=\"types\">\n            <p *ngFor=\"let type of pokemon.type\"\n            [class.planta]=\"type === 'Grass'\"      [class.water]=\"type === 'Water'\"\n            [class.fire]=\"type === 'Fire'\"         [class.dragon]=\"type === 'Dragon'\"\n            [class.normal]=\"type === 'Normal'\"     [class.ghost]=\"type === 'Ghost'\"\n            [class.bug]=\"type === 'Bug'\"           [class.poison]=\"type === 'Poison'\"\n            [class.electric]=\"type === 'Electric'\" [class.ground]=\"type === 'Ground'\"\n            [class.fight]=\"type === 'Fighting'\"    [class.ice]=\"type === 'Ice'\"\n            [class.psychic]=\"type === 'Psychic'\"   [class.rock]=\"type === 'Rock'\"\n            [class.flying]=\"type === 'Flying'\"\n            >{{type}}</p>\n          </div>\n        </div>\n\n    </div>\n  </main>\n  <div id=\"modal\" *ngIf=\"pokemonSelected\" (click)=\"onSelect(null)\">\n    <div id=\"conteudo-modal\">\n      <div id=\"header\" [class.planta]=\"pokemonSelected.type[0] === 'Grass'\"\n        [class.water]=\"pokemonSelected.type[0] === 'Water'\" [class.fire]=\"pokemonSelected.type[0] === 'Fire'\"\n        [class.normal]=\"pokemonSelected.type[0] === 'Normal'\" [class.dragon]=\"pokemonSelected.type[0] === 'Dragon'\"\n        [class.bug]=\"pokemonSelected.type[0] === 'Bug'\" [class.ghost]=\"pokemonSelected.type[0] === 'Ghost'\"\n        [class.poison]=\"pokemonSelected.type[0] === 'Poison'\" [class.electric]=\"pokemonSelected.type[0] === 'Electric'\"\n        [class.ground]=\"pokemonSelected.type[0] === 'Ground'\" [class.fight]=\"pokemonSelected.type[0] === 'Fighting'\"\n        [class.psychic]=\"pokemonSelected.type[0] === 'Psychic'\" [class.rock]=\"pokemonSelected.type[0] === 'Rock'\"\n        [class.ice]=\"pokemonSelected.type[0] === 'Ice'\" [class.flying]=\"pokemonSelected.type[0] === 'Flying'\">\n        <div id=\"foto\">\n          <img src=\"https://pokeres.bastionbot.org/images/pokemon/{{pokemonSelected.id}}.png\" alt=\"\">\n          <div id=\"types\">\n            <p *ngFor=\"let type of pokemonSelected.type\" [class.planta]=\"type === 'Grass'\"\n              [class.water]=\"type === 'Water'\" [class.ice]=\"type === 'Ice'\" [class.fire]=\"type === 'Fire'\"\n              [class.dragon]=\"type === 'Dragon'\" [class.normal]=\"type === 'Normal'\" [class.bug]=\"type === 'Bug'\"\n              [class.ghost]=\"type === 'Ghost'\" [class.poison]=\"type === 'Poison'\" [class.electric]=\"type === 'Electric'\"\n              [class.ground]=\"type === 'Ground'\" [class.fight]=\"type === 'Fighting'\" [class.psychic]=\"type === 'Psychic'\"\n              [class.flying]=\"type === 'Flying'\" [class.rock]=\"type === 'Rock'\">{{type}}</p>\n          </div>\n        </div>\n        <div id=\"stats\">\n          <h1>{{pokemonSelected.name}}</h1>\n          <div id=\"atributos\">\n            <div id=\"esquerda\">\n              <div class=\"item\">\n                <p>Chance de spawn</p>\n                <p>{{pokemonSelected.spawn_chance}}</p>\n              </div>\n              <div class=\"item\">\n                <p>Hora spawn</p>\n                <p>{{pokemonSelected.spawn_time}}</p>\n              </div>\n              <div class=\"item\">\n                <p>Peso</p>\n                <p>{{pokemonSelected.weight}}</p>\n              </div>\n              <div class=\"item\">\n                <p>Altura</p>\n                <p>{{pokemonSelected.height}}</p>\n              </div>\n              <div class=\"item\">\n                <p>Doce</p>\n                <p>{{pokemonSelected.candy}}</p>\n              </div>\n              <div class=\"item\">\n                <p>Doces necessários</p>\n                <p>{{pokemonSelected.candy_count}}</p>\n              </div>\n            </div>\n            <div id=\"direita\">\n              <h2>Principais fraquezas</h2>\n              <div id=\"fraquezas\">\n                <p *ngFor=\"let type of pokemonSelected.weaknesses\" [class.planta]=\"type === 'Grass'\"\n                  [class.water]=\"type === 'Water'\"     [class.ice]=\"type === 'Ice'\"         [class.ghost]=\"type === 'Ghost'\"\n                  [class.fire]=\"type === 'Fire'\"       [class.dragon]=\"type === 'Dragon'\"   [class.normal]=\"type === 'Normal'\"\n                  [class.bug]=\"type === 'Bug'\"         [class.poison]=\"type === 'Poison'\"   [class.electric]=\"type === 'Electric'\"\n                  [class.ground]=\"type === 'Ground'\"   [class.fight]=\"type === 'Fighting'\"  [class.flying]=\"type === 'Flying'\"\n                  [class.psychic]=\"type === 'Psychic'\" [class.rock]=\"type === 'Rock'\">\n                  {{type}}</p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n      <div id=\"evolucao\">\n\n      </div>\n\n    </div>\n  </div>\n\n</body>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PokemonModel } from '../pokemon-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokemonApiServiceService {\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  public List(): Observable<PokemonModel[]> {\n    return this.httpClient.get<PokemonModel[]>('https://trabalho-971f3.firebaseio.com/pokemon.json')\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}